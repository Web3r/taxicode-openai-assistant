openapi: 3.1.0
info:
  title: Taxicode Booking API
  version: 1.3.0
  description: |
    Taxicode booking and payment APIs.
    All endpoints return HTTP 200; check "status" in JSON for errors.

servers:
  - url: https://api.taxicode.com

paths:
  /booking/quote/:
    post:
      operationId: createBookingQuote
      summary: Get a quote for a journey
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QuoteRequest"
      responses:
        '200':
          description: Quote or business-level error response
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/QuoteResponse"
                  - $ref: "#/components/schemas/BusinessError"

  /booking/pay/:
    post:
      operationId: createBookingPayment
      summary: Confirm booking and initiate payment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BookingPaymentRequest"
      responses:
        '200':
          description: Booking payment result
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/BookingPaymentSuccess"
                  - $ref: "#/components/schemas/BusinessError"

components:
  schemas:
    QuoteRequest:
      type: object
      properties:
        key:
          type: string
        pickup:
          type: string
        destination:
          type: string
        vias:
          type: array
          items:
            type: string
        date:
          oneOf:
            - type: string
              enum: ["asap"]
            - type: integer
        return:
          oneOf:
            - type: integer
            - type: boolean
        people:
          type: integer
        quote_type:
          type: string
          enum: [mileage, hourly]
      required: [key, pickup, destination, date]

    QuoteResponse:
      type: object
      properties:
        status:
          type: string
        journey_id:
          type: string
        journey:
          $ref: "#/components/schemas/Journey"
        quotes:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/Quote"
      required: [status, journey_id, journey, quotes]

    BookingPaymentRequest:
      type: object
      properties:
        quote:
          type: string
        vehicle:
          type: integer
        method:
          type: string
          enum: [card, cash, applepay, googlepay, authorised_payment_handler]
        key:
          type: string
      required: [quote, key]

    BookingPaymentSuccess:
      type: object
      properties:
        status:
          type: string
        session:
          type: object
          properties:
            state_hash:
              type: string
            gateway_public_key:
              type: string
            booking_ref:
              type: string
            api_checkout_url:
              type: string
          required: [state_hash, gateway_public_key, booking_ref, api_checkout_url]
      required: [status, session]

    BusinessError:
      type: object
      properties:
        status:
          type: string
        error:
          type: string
      required: [status, error]

    Journey:
      type: object
      properties:
        pickup:
          $ref: "#/components/schemas/Location"
        destination:
          $ref: "#/components/schemas/Location"
        vias:
          type: array
          items:
            $ref: "#/components/schemas/Location"
        distance:
          type: number
        duration:
          type: integer
      required: [pickup, destination, distance, duration]

    Location:
      type: object
      properties:
        string:
          type: string
        position:
          type: array
          items:
            type: number
          minItems: 2
          maxItems: 2
        postcode:
          type: string
      required: [string, position]

    Quote:
      type: object
      properties:
        instance_id:
          type: integer
        company_name:
          type: string
        price:
          type: number
        vehicles:
          type: array
          items:
            $ref: "#/components/schemas/Vehicle"
      required: [instance_id, company_name, price]

    Vehicle:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
      required: [id, name]
