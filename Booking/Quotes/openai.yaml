openapi: 3.1.0
info:
  title: Taxicode Booking API
  version: 1.3.0
  description: |
    Taxicode booking and payment APIs.  
    All endpoints return HTTP 200; check "status" in JSON for errors.

servers:
  - url: https://api.taxicode.com

paths:
  /booking/quote/:
    post:
      operationId: createBookingQuote
      summary: Get a quote for a journey (or a business-level error)
      description: |
        Request a journey quote.
        Send `date` as "asap" or a UNIX timestamp (timestamps within 1 hour => ASAP).
        Always HTTP 200: check `status` in JSON.
      parameters:
        - in: query
          name: key
          schema:
            type: string
          required: true
          description: Your API key (can also be sent in JSON body)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QuoteRequest"
      responses:
        '200':
          description: Quote or business-level error response
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/QuoteResponse"
                  - $ref: "#/components/schemas/BusinessError"

  /booking/pay/:
    post:
      operationId: createBookingPayment
      summary: Confirm booking and initiate payment
      description: |
        Finalize the booking using a selected quote/vehicle.
        Returns a `session.api_checkout_url` to complete payment.
        Always HTTP 200: check `status` in JSON.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BookingPaymentRequest"
      responses:
        '200':
          description: Booking payment result
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/BookingPaymentSuccess"
                  - $ref: "#/components/schemas/BusinessError"

components:
  schemas:
    QuoteRequest:
      type: object
      properties:
        key:
          type: string
        pickup:
          type: string
        destination:
          type: string
        vias:
          type: array
          items:
            type: string
        date:
          oneOf:
            - type: string
              enum: ["asap"]
            - type: integer
        return:
          oneOf:
            - type: integer
            - type: boolean
        people:
          type: integer
        quote_type:
          type: string
          enum: [mileage, hourly]
        hours:
          type: integer
        split:
          type: boolean
        other_rates:
          type: string
        company:
          type: integer
        instances:
          type: integer
      required:
        - key
        - pickup
        - destination
        - date

    QuoteResponse:
      type: object
      properties:
        status:
          type: string
          enum: ["OK"]
        journey_id:
          type: string
        journey:
          $ref: "#/components/schemas/Journey"
        quotes:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/Quote"
        card:
          type: array
          items:
            $ref: "#/components/schemas/CardOption"
        payment_url:
          type: string
        continue_url:
          type: string
        secureType:
          type: string
        api_checkout_url:
          type: string
      required:
        - status
        - journey_id
        - journey
        - quotes

    BookingPaymentRequest:
      type: object
      properties:
        quote:
          type: string
        vehicle:
          type: integer
        method:
          type: string
          enum: [card, cash, applepay, googlepay, authorised_payment_handler]
        key:
          type: string
        test:
          type: string
          enum: ["0", "1"]
        flight_number:
          type: string
        voucher_code:
          type: string
        business_name:
          type: string
        business_ref:
          type: string
        notes:
          type: string
      required:
        - quote
        - key

    BookingPaymentSuccess:
      type: object
      properties:
        status:
          type: string
          enum: ["OK"]
        session:
          type: object
          properties:
            state_hash:
              type: string
            gateway_public_key:
              type: string
            booking_ref:
              type: string
            api_checkout_url:
              type: string
          required:
            - state_hash
            - gateway_public_key
            - booking_ref
            - api_checkout_url
      required:
        - status
        - session

    BusinessError:
      type: object
      properties:
        status:
          type: string
          enum: ["ERROR"]
        error:
          type: string
      required:
        - status
        - error

    Journey:
      type: object
      properties:
        pickup:
          $ref: "#/components/schemas/Location"
        vias:
          type: array
          items:
            $ref: "#/components/schemas/Location"
        destination:
          $ref: "#/components/schemas/Location"
        distance:
          type: number
        duration:
          type: integer
        duration_text:
          type: string
        date:
          type: string
