openapi: 3.0.3
info:
  title: Taxicode Quote API
  version: 1.2.0
  description: |
    Request a journey quote using Taxicode’s booking API.  
    Note: even error conditions use HTTP 200; clients must inspect the JSON `status` field.
servers:
  - url: https://api.taxicode.com
paths:
  /booking/quote/:
    post:
      summary: Get a quote for a journey (or a business-level error)
      description: |
        Request a journey quote.  
        You can send `date` as:
          - `"asap"` or a UNIX timestamp within 1 hour ⇒ treated as ASAP
          - any future UNIX timestamp ⇒ scheduled journey  
        ⚠️ HTTP 200 is always returned; check `status` in JSON.  
      parameters:
        - in: query
          name: key
          schema:
            type: string
          required: true
          description: Your API key (can also be sent in JSON body)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuoteRequest'
            examples:
              asapExample:
                value:
                  key: "YOUR_API_KEY"
                  pickup: "51.5074,-0.1278"
                  destination: "51.5098,-0.1180"
                  date: "asap"
                  people: 2
                  quote_type: mileage
              scheduledExample:
                value:
                  key: "YOUR_API_KEY"
                  pickup: "51.5074,-0.1278"
                  destination: "51.5098,-0.1180"
                  date: 1710150000
                  people: 2
                  quote_type: mileage
      responses:
        '200':
          description: |
            Returns either a valid quote response **or** an error object—always via HTTP 200.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/QuoteResponse'
                  - $ref: '#/components/schemas/BusinessError'
              examples:
                successExample:
                  summary: Valid quote
                  value:
                    status: "OK"
                    journey_id: "CA765D41B18AFE79C1A1796A7F8557A4"
                    journey:
                      pickup:
                        string: "york"
                        position: [53.957744, -1.082259]
                        postcode: "YO1 9NF"
                      vias: []
                      destination:
                        string: "york station"
                        position: [53.958107, -1.092385]
                        postcode: "YO24"
                      distance: 1
                      duration: 238
                      duration_text: "3 mins"
                      date: "2024-07-30 12:00:00"
                      return: false
                      people: 1
                      quote_type: "mileage"
                      hourly: false
                      is_airport: false
                    quotes:
                      83EEECC21BBC13268C67526D08B58160:
                        $ref: "#/components/schemas/Quote"
                    card:
                      - code: "VISA"
                        name: "Visa Credit"
                        uplift: 5
                    payment_url: "https://secure.taxicode.com/api/"
                    continue_url: "https://secure.taxicode.com/payment/"
                    secureType: "secure.taxicode.com"
                    api_checkout_url: "https://api.taxicode.com/secure/checkout_session/create/"
                errorDatePast:
                  summary: Date/time in the past (soft error)
                  value:
                    status: "ERROR"
                    error: "Sorry, journey date and time in the past are not valid"
                errorMissingFields:
                  summary: Missing pickup or destination
                  value:
                    status: "ERROR"
                    error: "Pickup and Destination must be set."
                errorGeneric:
                  summary: Generic error
                  value:
                    status: "ERROR"
                    error: "Sorry, generic error message"
components:
  schemas:
    QuoteRequest:
      type: object
      properties:
        key:
          type: string
        pickup:
          type: string
        destination:
          type: string
        vias:
          type: array
          items:
            type: string
        date:
          oneOf:
            - type: string
              enum: ["asap"]
            - type: integer
          description: |
            `"asap"` or UNIX timestamp within 1 hour ⇒ ASAP;  
            otherwise schedule in future.
        return:
          oneOf:
            - type: integer
            - type: boolean
        people:
          type: integer
        quote_type:
          type: string
          enum: [mileage, hourly]
        hours:
          type: integer
        split:
          type: boolean
        other_rates:
          type: string
        company:
          type: integer
        instances:
          type: integer
      required:
        - key
        - pickup
        - destination
        - date
    QuoteResponse:
      type: object
      properties:
        status:
          type: string
          enum: ["OK"]
        journey_id:
          type: string
        journey:
          $ref: "#/components/schemas/Journey"
        quotes:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/Quote"
        card:
          type: array
          items:
            $ref: "#/components/schemas/CardOption"
        payment_url:
          type: string
        continue_url:
          type: string
        secureType:
          type: string
        api_checkout_url:
          type: string
      required:
        - status
        - journey_id
        - journey
        - quotes
    BusinessError:
      type: object
      properties:
        status:
          type: string
          enum: ["ERROR"]
        error:
          type: string
      required:
        - status
        - error
    Journey:
      type: object
      properties:
        pickup:
          $ref: "#/components/schemas/Location"
        vias:
          type: array
          items:
            $ref: "#/components/schemas/Location"
        destination:
          $ref: "#/components/schemas/Location"
        distance:
          type: number
        duration:
          type: integer
        duration_text:
          type: string
        date:
          type: string
        return:
          oneOf:
            - type: integer
            - type: boolean
        people:
          type: integer
        quote_type:
          type: string
        hourly:
          type: boolean
        is_airport:
          type: boolean
    Location:
      type: object
      properties:
        string:
          type: string
        position:
          type: array
          items:
            type: number
            format: float
          minItems: 2
          maxItems: 2
        postcode:
          type: string
    Quote:
      type: object
      properties:
        instance_id:
          type: integer
        company_name:
          type: string
        company_logo:
          oneOf:
            - type: boolean
            - type: string
        company_id:
          type: integer
        company_location:
          type: string
        company_phone:
          oneOf:
            - type: boolean
            - type: string
        company_site:
          type: string
        price:
          type: number
        meetandgreet:
          type: boolean
        rating:
          $ref: "#/components/schemas/Rating"
        promo:
          type: boolean
        bidirectional_on:
          type: boolean
        vehicles:
          type: array
          items:
            $ref: "#/components/schemas/Vehicle"
        performance:
          type: number
        payment_options:
          type: array
          items:
            type: string
        active:
          type: boolean
        cutoff:
          type: string
        class:
          type: string
        anonymous:
          type: boolean
        notification:
          type: integer
        highlight:
          oneOf:
            - type: boolean
            - type: string
    Rating:
      type: object
      properties:
        ratings:
          type: integer
        score:
          type: number
    Vehicle:
      type: object
      properties:
        price:
          type: number
        meetandgreet_price:
          type: number
        name:
          type: string
        image:
          type: string
        passengers:
          type: integer
        luggage_big:
          type: integer
        luggage_small:
          type: integer
        count:
          type: integer
        id:
          type: integer
        class:
          type: string
        type:
          type: object
          properties:
            type:
              type: string
            class:
              type: string
    CardOption:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        uplift:
          type: number
